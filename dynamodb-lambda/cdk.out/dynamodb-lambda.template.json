{
  "Resources": {
    "demotable002BE91A": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/demo_table/Resource"
      }
    },
    "producerlambdafunctionServiceRole5400FE21": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/ServiceRole/Resource"
      }
    },
    "producerlambdafunctionServiceRoleDefaultPolicy727DC938": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "demotable002BE91A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "producerlambdafunctionServiceRoleDefaultPolicy727DC938",
        "Roles": [
          {
            "Ref": "producerlambdafunctionServiceRole5400FE21"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "producerlambdafunctionCE724CE7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "d52b785d367a8da07edf4b6afe13b723d086986a55e38e65ffc68fb46f3c3b7e.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "producerlambdafunctionServiceRole5400FE21",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "demotable002BE91A"
            }
          }
        },
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "producerlambdafunctionServiceRoleDefaultPolicy727DC938",
        "producerlambdafunctionServiceRole5400FE21"
      ],
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/Resource",
        "aws:asset:path": "asset.d52b785d367a8da07edf4b6afe13b723d086986a55e38e65ffc68fb46f3c3b7e",
        "aws:asset:property": "Code"
      }
    },
    "consumerlambdafunctionServiceRole116B0746": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/ServiceRole/Resource"
      }
    },
    "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "demotable002BE91A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025",
        "Roles": [
          {
            "Ref": "consumerlambdafunctionServiceRole116B0746"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "consumerlambdafunction40710347": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "de3b9cf558a0778ce41c0deffcc7f5ae1209ae47d9b4a99b9668294ae095d8dc.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "consumerlambdafunctionServiceRole116B0746",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "demotable002BE91A"
            }
          }
        },
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025",
        "consumerlambdafunctionServiceRole116B0746"
      ],
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/Resource",
        "aws:asset:path": "asset.de3b9cf558a0778ce41c0deffcc7f5ae1209ae47d9b4a99b9668294ae095d8dc",
        "aws:asset:property": "Code"
      }
    },
    "oneminuteruleE9168CE5": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "producerlambdafunctionCE724CE7",
                "Arn"
              ]
            },
            "Id": "Target0"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "consumerlambdafunction40710347",
                "Arn"
              ]
            },
            "Id": "Target1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/one_minute_rule/Resource"
      }
    },
    "oneminuteruleAllowEventRuledynamodblambdaoneminuterule52E32D8A42E141C6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "producerlambdafunctionCE724CE7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "oneminuteruleE9168CE5",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/one_minute_rule/AllowEventRuledynamodblambdaoneminuterule52E32D8A"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.89.0,@aws-cdk/assets=1.89.0,@aws-cdk/aws-apigateway=1.89.0,@aws-cdk/aws-apigatewayv2=1.89.0,@aws-cdk/aws-applicationautoscaling=1.89.0,@aws-cdk/aws-autoscaling=1.89.0,@aws-cdk/aws-autoscaling-common=1.89.0,@aws-cdk/aws-autoscaling-hooktargets=1.89.0,@aws-cdk/aws-batch=1.89.0,@aws-cdk/aws-certificatemanager=1.89.0,@aws-cdk/aws-cloudformation=1.89.0,@aws-cdk/aws-cloudfront=1.89.0,@aws-cdk/aws-cloudwatch=1.89.0,@aws-cdk/aws-codebuild=1.89.0,@aws-cdk/aws-codecommit=1.89.0,@aws-cdk/aws-codedeploy=1.89.0,@aws-cdk/aws-codeguruprofiler=1.89.0,@aws-cdk/aws-codepipeline=1.89.0,@aws-cdk/aws-codepipeline-actions=1.89.0,@aws-cdk/aws-cognito=1.89.0,@aws-cdk/aws-dynamodb=1.89.0,@aws-cdk/aws-ec2=1.89.0,@aws-cdk/aws-ecr=1.89.0,@aws-cdk/aws-ecr-assets=1.89.0,@aws-cdk/aws-ecs=1.89.0,@aws-cdk/aws-efs=1.89.0,@aws-cdk/aws-elasticloadbalancing=1.89.0,@aws-cdk/aws-elasticloadbalancingv2=1.89.0,@aws-cdk/aws-events=1.89.0,@aws-cdk/aws-events-targets=1.89.0,@aws-cdk/aws-iam=1.89.0,@aws-cdk/aws-kinesis=1.89.0,@aws-cdk/aws-kinesisfirehose=1.89.0,@aws-cdk/aws-kms=1.89.0,@aws-cdk/aws-lambda=1.89.0,@aws-cdk/aws-logs=1.89.0,@aws-cdk/aws-route53=1.89.0,@aws-cdk/aws-route53-targets=1.89.0,@aws-cdk/aws-s3=1.89.0,@aws-cdk/aws-s3-assets=1.89.0,@aws-cdk/aws-sam=1.89.0,@aws-cdk/aws-secretsmanager=1.89.0,@aws-cdk/aws-servicecatalog=1.89.0,@aws-cdk/aws-servicediscovery=1.89.0,@aws-cdk/aws-sns=1.89.0,@aws-cdk/aws-sns-subscriptions=1.89.0,@aws-cdk/aws-sqs=1.89.0,@aws-cdk/aws-ssm=1.89.0,@aws-cdk/aws-stepfunctions=1.89.0,@aws-cdk/cloud-assembly-schema=1.89.0,@aws-cdk/core=1.89.0,@aws-cdk/custom-resources=1.89.0,@aws-cdk/cx-api=1.89.0,@aws-cdk/pipelines=1.89.0,@aws-cdk/region-info=1.89.0,jsii-runtime=Python/3.8.1"
      },
      "Metadata": {
        "aws:cdk:path": "dynamodb-lambda/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}